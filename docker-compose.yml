services:
    postgres:
        image: postgres
        container_name: postgres
        environment:
            - POSTGRES_PASSWORD=postgres
        ports:
            - 5432:5432
        volumes:
            - postgres:/var/lib/postgresql/data
    mongo:
        image: mongo
        container_name: mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=mongo
            - MONGO_INITDB_ROOT_PASSWORD=mongo
        ports:
            - 27017:27017
        volumes:
            - mongo:/var/lib/mongodb/data
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
    identity:
        image: heathroru/identity:latest        
        container_name: identity
        build:
            context: .
            dockerfile: src/IdentityService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__PostgresDb=Server=postgres:5432;User Id=postgres;Password=postgres;Database=identity
        ports:
            - 5000:80
        depends_on:
            - postgres
    gateway:
        image: heathroru/gateway:latest        
        container_name: gateway
        build:
            context: .
            dockerfile: src/GatewayService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
        ports:
            - 6001:80
    catalog:
        image: heathroru/catalog:latest
        container_name: catalog
        build:
            context: .
            dockerfile: src/CatalogService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__PostgresDb=Server=postgres:5432;User Id=postgres;Password=postgres;Database=catalog
            - IdentityServiceUrl=http://identity
        ports:
            - 7001:80
        depends_on:
            - postgres
            - rabbitmq
    search:
        image: heathroru/search:latest
        container_name: search
        build:
            context: .
            dockerfile: src/SearchService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__MongoDb=mongodb://mongo:mongo@mongo
        ports:
            - 7002:80
        depends_on:
            - mongo
            - rabbitmq
    notification:
        image: heathroru/notification:latest
        container_name: notification
        build:
            context: .
            dockerfile: src/NotificationService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
        ports:
            - 7003:80
        depends_on:
            - rabbitmq
    ai:
        image: heathroru/ai:latest
        container_name: ai
        build:
            context: .
            dockerfile: src/AIService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__PostgresDb=Server=postgres:5432;User Id=postgres;Password=postgres;Database=ai
            - OllamaUrl=http://ollama:11434
        ports:
            - 7004:80
        depends_on:
            - postgres
    ollama:
        image: ollama/ollama
        container_name: ollama
        ports:
            - "11434:11434"
        volumes:
            - ollama:/root/.ollama
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities: [gpu]
volumes:
    postgres:
    mongo:
    ollama: